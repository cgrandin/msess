b[(2-1)*nrow(a[[1]])+2]
a[[1]][2,2]
b[(2-1)*nrow(a[[1]])+3]
b[(4-1)*nrow(a[[1]])+3]
b[(4-1)*nrow(a[[1]])+3]
b[2*((4-1)*nrow(a[[1]])+3)]
b[3*((4-1)*nrow(a[[1]])+3)]
a[[3]][3,4]
source("plotAll.r")
source("plotAll.r")
traceback()
source("plotAll.r")
arr[1,2,3]
Q
a
k         <- array(unlist(a), dim=c(nrow(a[[1]]), ncol(a[[1]]),length(a)))
k
k[1,3,4]
k[1,4,3]
k[2,2,1]
k[1,2,]
source("plotAll.r")
source("plotAll.r")
traceback()
traceback()
source("plotAll.r")
source("plotAll.r")
arr
source("plotAll.r")
arr
source("plotAll.r")
source("plotAll.r")
source("plotAll.r")
nr
ncol
nc
Q
source("plotAll.r")
source("plotAll.r")
source("plotAll.r")
Q
source("plotAll.r")
mat
Q
source("plotAll.r")
assessList[[42]]
assessList[[1]]
Q
source("plotAll.r")
Q
source("plotAll.r")
assessList[[1]]
assessList[[2]]
Q
source("plotAll.r")
mat
2029-1966
2029-1966+1
mat
assessList[[1]]
names(assessList[[1]])
colnames(assessList[[1]])
Q
source("plotAll.r")
mat
Q
source("plotAll.r")
traceback()
source("plotAll.r")
   indAssess <- colnames(scenarios[[scenario]]$assessSSBMedian) %in% paste((firstTSYear+1):lastTSYear,sep="")
inndAssess
indAssess
              diff <- scenarios[[scenario]]$SSB[,indTrue]-scenarios[[scenario]]$assessSSB[,indAssess]
Q
source("plotAll.r")
              diff <- scenarios[[scenario]]$SSB[,indTrue]-scenarios[[scenario]]$assessSSB[,indAssess]
diff
indTrue
scenarios[[scenario]]$SSB[,indTrue]
scenarios[[scenario]]$assessSSB[,indAssess]
indAssess
length(indAssess)
ncol(scenarios[[scenario]]$assessSSB)
Q
source("plotAll.r")
traceback()
source("plotAll.r")
              diff <- scenarios[[scenario]]$SSB[,indTrue]-scenarios[[scenario]]$assessSSBMedian[,indAssess]
diff
diff/1000
Q
source("plotAll.r")
Q
source("msess.r")
scenarioDat$maxSimNum
Q
source("msess.r")
scenarioDat$maxSimNum
scenarioDat$minSimNum
    scenariosDat$sims <- sort(sample(scenarioDat$minNumSims:scenarioDat$maxNumSims,numRandomDraws))
sort(sample(scenarioDat$minNumSims:scenarioDat$maxNumSims,numRandomDraws))
scenarioDat$minNumSims
    scenarioDat$sims <- sort(sample(scenarioDat$minSimNum:scenarioDat$maxSimNum,numRandomDraws))
scenarioDat$sims
Q
source("msess.r")
s=mergeMSE()
source("msess.r")
s=mergeMSE()
s$annual
source("msess.r")
source("msess.r")
info
dirNames
s
q
rm(list=ls(all=T))
source("msess.r")
s
n
Q
source("msess.r")
match
info$ScenarioName
info$scenarioName
Q
source("msess.r")
source("msess.r")
scenarios[[scenario]]$omFullPath
Q
source("msess.r")
    copySSInputFiles(sourceDir = scenarioDat$operatingModelFullPath,
                     destDir   = scenarioDat$fullPath)
Q
source("msess.r")
    copySSInputFiles(sourceDir = scenarios[[scenario]]$operatingModelFullPath,
                     destDir   = scenarios[[scenario]]$fullPath)
scenarios[[scenario]]$name
scenarios[[scenario]]$scenarioName
scenarios[[scenario]]$fullPath
scenarios[[scenario]]$operatingModelFullPath
Q
source("msess.r")
    copySSInputFiles(sourceDir = scenarios[[scenario]]$omFullPath,
                     destDir   = scenarios[[scenario]]$fullPath)
args(copySSInputFiles)
Q
source("msess.r")
.SIM_CONTROL_FILE
Q
source("msess.r")
n
Q
source("msess.r")
n
n
Q
?file.copy
source("msess.r")
source("msess.r")
    file.copy(from=sourceDir,to=destDir)
sourceDir
destDir
    file.copy(from=sourceDir,to=destDir,recursive=T)
    file.copy(from=paste(sourceDir,"/",sep=""),to=paste(destDir,"/",sep=""))
dir.copy
list.files()
Q
sourceDir
source("msess.r")
srcFiles
destFiles
dstFiles
n
Q
source("msess.r")
Q
source("msess.r")
scenarios[[scenario]]$omFullPath
scenarios[[scenario]]$fullPath
source("msess.r")
source("msess.r")
scenarioInfo
Q
source("msess.r")
scenarioInfo
Q
source("msess.r")
scenarioDirs
Q
source("msess.r")
omDirs
Q
source("msess.r")
source("msess.r")
source("msess.r")
source("msess.r")
Q
source("msess.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
retroSim
names(scenario[1]])
names(scenario[1])
names(scenarios[[1]])
scenario[[1]]scenarioName
scenario[[1]]$scenarioName
scenarios[[1]]$scenarioName
names(scenarios[[2]])
scenarios[[2]]$scenarioName
scenarios[[3]]$scenarioName
names(scenarios[[3]])
Q
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
scenarioName
names(scenario)
scenario$sims
sort(names(scenario))
scenario$simNums
scenario$numSims
Q
source("mseSSplotall.r")
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
source("mseSSplotall.r")
numSims
sims
scenario$simNums
Q
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
ong
png
tsYearLims
names(scenario)
sort(names(scenario))
names(scenario$assessTSYears)
names(scenario$assessSSB)
scenario$assessSSB
        dep <- scenario$assessDep[[retroSim]]
dep
        dep <- scenario$assessDepl
dep
        dep <- scenario$assessDepl[[retroSim]]
dep
depQ
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
tsYearLims
        plot(0,xlim=tsYearLims,ylim=ylim,type="n",las=1,xaxs='i',yaxs='i',
             main="Depletion",xlab="Year",ylab="Depletion",axes=FALSE)
        plot(0,,type="n",xlim=tsYearLims,ylim=ylim,type="n",las=1,xaxs='i',yaxs='i',
             main="Depletion",xlab="Year",ylab="Depletion",axes=FALSE)
        plot(0,type="n",xlim=tsYearLims,ylim=ylim,type="n",las=1,xaxs='i',yaxs='i',
             main="Depletion",xlab="Year",ylab="Depletion",axes=FALSE)
        plot(0,type='n',xlim=tsYearLims,ylim=ylim,type="n",las=1,xaxs='i',yaxs='i',
             main="Depletion",xlab="Year",ylab="Depletion",axes=FALSE)
        plot(0,type='n',xlim=tsYearLims,ylim=ylim,type="n",las=1,xaxs='i',yaxs='i',axes=FALSE)
        plot(0,type="n",xlim=tsYearLims,ylim=ylim,type="n",las=1,xaxs='i',yaxs='i',axes=FALSE)
        plot(0,type="n",xlim=tsYearLims,ylim=ylim,type="n",las=1,xaxs='i',yaxs='i',axes=FALSE)\
        plot(0,type="n",xlim=tsYearLims,ylim=ylim,las=1,xaxs='i',yaxs='i',axes=FALSE)
tsYearLims
class(tsYearLims)
class(c(0,1))
Q
source("mseSSplotall.r")
        plot(0,type="n",xlim=tsYearLims,ylim=ylim,las=1,xaxs='i',yaxs='i',axes=FALSE)
?plot
tsYearLims
dep
dep[1,]
        plot(tsYearLims,dep[1,],type="n",xlim=tsYearLims,ylim=ylim,las=1,xaxs='i',yaxs='i',axes=FALSE)
        plot(tsYearLims,dep[1,],type="n",ylim=ylim,las=1,xaxs='i',yaxs='i',axes=FALSE)
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
source("mseSSplotall.r")
Q
?lines
source("mseSSplotall.r")
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
png
Q
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
dep
ylim
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
sort(names(scenario))
scenario$simNums
Q
source("mseSSplotall.r")
source("mseSSplotall.r")
traceback()
traceback()
source("mseSSplotall.r")
source("mseSSplotall.r")
legendCols
legendList
length(legendList)
Q
source("mseSSplotall.r")
tsYears
  firstAssessYear <- scenario$firstAssessYear
  firstAssessYear 
  assessYears     <- firstAssessYear:lastAssessYear
  assessYears     <- firstAssessYear:lastTSYear
  assessYears
length(*)  assessYears
length(assessYears)
Q
source("mseSSplotall.r")
source("mseSSplotall.r")
    legend("topright",legendList,col=legendCols,lty=1,lwd=2,cex=0.7)
?legend
    legend("topright",legend=legendList,col=legendCols,lty=1,lwd=2,cex=0.7)
Q
?while
?
help(while)
help("while")
source("mseSSplotall.r")
assessYears
assessYear
8 % 8
8 mod 89
8 %% 8
?Arithmetic
-8^(1/3)
(-8)^(1/3)
8 %/% 8
7 %% 8
9 %% 8
8 %/% 8
9 %/% 8
17/8
17 %/% 8
16 %/% 8
15 %/% 8
?legend
Q
source("mseSSplotall.r")
7 %/% 8
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
dep
?plot
Q
source("mseSSplotall.r")
Q
Q
source("mseSSplotall.r")
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
Q
Q
source("mseSSplotall.r")
Q
Q
source("mseSSplotall.r")
Q
Q
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
Q
Q
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
?mar
?par
source("mseSSplotall.r")
?axis
source("mseSSplotall.r")
dep
dep>1.5
dep
dep>1.5
Q
source("mseSSplotall.r")
scenario
names(scenario)
sort(names(scenario))
scenario$objectiveFunctionVal
scenario$prettyName
scenario$objectiveFunctionVal
Q
source("mseSSplotall.r")
scenario$objectiveFunctionVal
simNums
scenario$simNums
scenario$objectiveFunctionVal
sort(names(scenario))
scenario$maxGradient
scenario$m
scenario$gr
Q
source("mseSSplotall.r")
scenario$finalGradient
dep
dep
dep
dep
Q
scenario$finalGradient
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
dep
scenario$depl
simNum
Q
source("mseSSplotall.r")
simNums
simNum
Q
source("mseSSplotall.r")
simLabel
scenario$depl
scenario$depl[dep
]
scenario$assessDepl
simNums
scenario$simNums
simLabel
scenario$depl[scenario$depl==simLabel,]
scenario$depl[names(scenario$depl)==simLabel,]
?subset
Q
source("mseSSplotall.r")
rowMatch
rowMatch==simLabel
        depsim <- scenario$depl[rowMatch,]
depSim
depsim
Q
source("mseSSplotall.r")
rowMatch
Q
source("mseSSplotall.r")
rowMatch
depSim
tsYears
tsYearLims
length(tsYearLims)
length(depSim)
Q
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
Q
Q
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
Q
source("mseSSplotall.r")
source("mseSSplotall.r")
source("mseSSplotall.r")
scenario$assessDepl
sort(names(scenario))
scenario$assessBatage
scenario$assessNatage
scenario$natage
sort(names(scenario))
scenario$assessRecr
sort(names(scenario))
source("mseSS.r")
runMSE()
getwd()
source("mseSS.r")
runMSE()
simDat$dat$CPUE
Q
